<!--
  Copyright © 2022 Apple Inc. All rights reserved.
-->
<!-- Has to have requested theme = dark otherwise text will disappear on gradient -->
<Control Name="MediaShowcaseCollectionView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:Views="using:AppleTV.Controls"
  xmlns:ampc="using:AMP.UI.Controls"
  xmlns:ampu="using:AMP.UI"
  IsTabStop="False"
  RequestedTheme="Dark"
  >
  <Control.Resources>
    <ampc:DoubleNegationConverter x:Key="DoubleToNegative" />

    <DataTemplate x:Key="MediaShowcaseLockupTemplate">
      <Grid Name="LockupRootGrid"
        Views:CommandEvents.ForwardPointerWheelChangedEvent="{Binding ElementName=MediaShowcaseCollectionView}"
        Views:SizeChangedRelayer.Enabled="True"
        RenderTransformOrigin="0,0"
        >
        <Grid.Resources>
          <Views:JsonImageToImageSourceConverter x:Key="JsonImageToImageSource"
            Height="945"
            OverrideAspectRatio="{StaticResource AspectRatio_16_9}"
            />
          <Views:StaticResourceValue x:Key="IsSportsLockup" Value="{Binding attributes.isSportsLockup}" />
        </Grid.Resources>

        <!--
          Clicking anywhere on the lockup image should take user to canonical page
          Aspect ratio should always be fixed as 16:9
        -->

        <ampc:AspectRatioGrid
          Views:CommandEvents.TappedCommand="{Binding routerDataSource.selectEventDataSource}"
          AspectRatio="{StaticResource AspectRatio_16_9}"
          CornerRadius="0 0 6 6"
          >
          <Image Source="{Binding children.backgroundImage, Converter={StaticResource JsonImageToImageSource}}" />

          <Grid Name="Left Gradient" IsHitTestVisible="False">
            <Grid.Background>
              <RadialGradientBrush Center="0, 1" GradientOrigin="0, 1" RadiusX="1.5" RadiusY="3">
                <GradientStop Offset="0" Color="{Binding Value, Source={StaticResource GradientColor}}" />
                <GradientStop Offset="0.5" Color="{Binding Value, Source={StaticResource GradientColor}, Converter={StaticResource ZeroAlpha}}" />
              </RadialGradientBrush>
            </Grid.Background>
          </Grid>

          <!-- Negative margin to work nicely with ZeroAlpha -->
          <Grid Name="Bottom Gradient"
            Margin="0 -200 0 0"
            IsHitTestVisible="False"
            >
            <Grid.Background>
              <LinearGradientBrush StartPoint="0.5, 1" EndPoint="0.5, 0.6">
                <GradientStop Offset="0" Color="{Binding Value, Source={StaticResource GradientColor}}" />
                <GradientStop Offset="1" Color="{Binding Value, Source={StaticResource GradientColor}, Converter={StaticResource ZeroAlpha}}" />
              </LinearGradientBrush>
            </Grid.Background>
          </Grid>

        </ampc:AspectRatioGrid>

        <Control Name="Lockup Variation"
          MaxWidth="448"
          Margin="40 0 0 40"
          HorizontalAlignment="Left"
          VerticalAlignment="Bottom"
          IsTabStop="False"
          Template="{Binding Value, Source={StaticResource IsSportsLockup}, Converter={StaticResource LockupVariationSelector}}"
          />
      </Grid>
    </DataTemplate>

    <Views:DataContextChildrenSizeConverter x:Key="ChildrenCount" />

    <Views:StaticResourceValue x:Key="GradientColor" Value="Black" />
    <Views:NumberToDurationConverter x:Key="NumberToDuration" />

    <x:Double x:Key="LockupVariationMaxTextWidth">400</x:Double>
    <x:String x:Key="DotSeparator">•</x:String>

    <DataTemplate x:Key="DurationTextTemplate">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <TextBlock Name="Separator"
          Grid.Column="0"
          Margin="5 0 5 0"
          Style="{StaticResource BodyEmphTextBlockStyle}"
          Text="{StaticResource DotSeparator}"
          />
        <TextBlock Name="Duration"
          Grid.Column="1"
          MaxLines="1"
          Style="{StaticResource BodyEmphTextBlockStyle}"
          Text="{Binding Converter={StaticResource NumberToDuration}}"
          TextTrimming="CharacterEllipsis"
          />
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="IconButtonTemplate">
      <Views:IconButton Name="IconButton" />
    </DataTemplate>

    <DataTemplate x:Key="SpinnerButtonTemplate">
      <ProgressRing
        MaxWidth="24"
        MaxHeight="24"
        IsActive="True"
        IsIndeterminate="True"
        />
    </DataTemplate>

    <ampc:KeyValueConverter x:Key="ButtonOrSpinnerTemplateSelector">
      <ampc:KeyValuePair Key="True" Value="{StaticResource IconButtonTemplate}" />
      <ampc:KeyValuePair Key="False" Value="{StaticResource SpinnerButtonTemplate}" />
    </ampc:KeyValueConverter>

    <DataTemplate x:Key="LockupButtonTemplate">
      <Views:CollectionUniformGrid Name="Buttons" ItemsSource="{Binding children}">
        <!-- Width/height values taken from button spec + converted to pixels -->
        <Views:CollectionUniformGrid.ItemTemplate>
          <DataTemplate>
            <Button Name="LockupButton"
              Width="230"
              Height="38"
              Margin="0 13 0 0"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              HorizontalContentAlignment="Center"
              VerticalContentAlignment="Stretch"
              Background="{StaticResource DarkThemeTextForegroundColor}"
              Command="{Binding routerDataSource.selectEventDataSource}"
              Content="{Binding}"
              ContentTemplate="{Binding ElementName=LockupButton, Path=IsEnabled, Converter={StaticResource ButtonOrSpinnerTemplateSelector}}"
              CornerRadius="6"
              RequestedTheme="Light"
              />
          </DataTemplate>
        </Views:CollectionUniformGrid.ItemTemplate>
      </Views:CollectionUniformGrid>
    </DataTemplate>

    <DataTemplate x:Key="ButtonDisclaimerTextTemplate">
      <TextBlock
        HorizontalAlignment="Center"
        Foreground="{StaticResource SecondaryDarkThemeTextForegroundColor}"
        Style="{StaticResource SubheadlineTextBlockStyle}"
        Text="{Binding value}"
        TextTrimming="CharacterEllipsis"
        />
    </DataTemplate>

    <Views:PriorityConverter x:Key="LogoOrTitlePriorityConverter">
      <Views:PriorityConverter.Priorities>
        <x:String>img</x:String>
        <x:String>title</x:String>
      </Views:PriorityConverter.Priorities>
    </Views:PriorityConverter>

    <Views:ItemTypeTemplateSelector x:Key="LogoOrTitleTemplateSelector">
      <Views:ItemTypeTemplate ItemType="img">
        <DataTemplate>
          <Grid>
            <Grid.Resources>
              <Views:ImageSize x:Key="ItemLogoImageSize"
                Height="80"
                MaxWidth="320"
                />
              <Views:JsonImageSource x:Key="LogoImageSource"
                Img="{Binding}"
                RequestSize="{StaticResource ItemLogoImageSize}"
                ResourceLookup="{StaticResource ImgSrcResourceLookup}"
                />
              <Views:JsonImageBrush x:Key="LogoImageBrush" JsonImageSource="{StaticResource LogoImageSource}" />
            </Grid.Resources>
            <ampc:AspectRatioGrid Name="Content Logo"
              Width="{Binding Width, Source={StaticResource LogoImageSource}}"
              Height="{Binding Height, Source={StaticResource LogoImageSource}}"
              Margin="0 0 0 13"
              HorizontalAlignment="Left"
              Views:JsonImage.FixDirection="True"
              Views:JsonImage.LoadingCurtain="{StaticResource LogoImageSource}"
              AspectRatio="{Binding AspectRatio, Source={StaticResource LogoImageSource}}"
              Background="{Binding Brush, Source={StaticResource LogoImageBrush}}"
              />
          </Grid>
        </DataTemplate>
      </Views:ItemTypeTemplate>
      <Views:ItemTypeTemplate ItemType="title">
        <DataTemplate>
          <TextBlock Name="LargeTitle"
            MaxWidth="{StaticResource LockupVariationMaxTextWidth}"
            Margin="0 0 0 8"
            ampc:TextBlock.TaggedText="{Binding value}"
            MaxLines="2"
            Style="{StaticResource LargeTitleTextBlockStyle}"
            TextTrimming="CharacterEllipsis"
            TextWrapping="WrapWholeWords"
            />
        </DataTemplate>
      </Views:ItemTypeTemplate>
    </Views:ItemTypeTemplateSelector>

    <DataTemplate x:Key="ContentMetadataTemplate">
      <StackPanel
        Margin="0 0 0 10"
        HorizontalAlignment="Left"
        Orientation="Horizontal"
        >
        <StackPanel.Resources>
          <Views:RatingToEntryConverter x:Key="RatingConverter" RatingDictionary="{StaticResource Ratings}" />
          <Views:StaticResourceValue x:Key="RatingEntry" Value="{Binding Converter={StaticResource RatingConverter}}" />
        </StackPanel.Resources>
        <TextBlock Name="Genre Name"
          MaxLines="1"
          Style="{StaticResource BodyEmphTextBlockStyle}"
          Text="{Binding genreName}"
          TextTrimming="CharacterEllipsis"
          />

        <Views:OptionalContentPresenter Name="Duration"
          Content="{Binding duration}"
          OptionalTemplate="{StaticResource DurationTextTemplate}"
          />

        <Views:SvgTintableImage Name="Rating"
          Height="14"
          Margin="8 0 0 0"
          IsTintable="{Binding Value.IsTintable, Source={StaticResource RatingEntry}}"
          Source="{Binding Value.ImageUri, Source={StaticResource RatingEntry}}"
          TintColor="{StaticResource DarkThemeTextForegroundColor}"
          />
      </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ContentDescriptionTemplate">
      <TextBlock
        MaxWidth="{StaticResource LockupVariationMaxTextWidth}"
        Margin="0 5"
        HorizontalAlignment="Left"
        ampc:TextBlock.TaggedText="{Binding value}"
        MaxLines="3"
        Style="{StaticResource Title4TextBlockStyle}"
        TextTrimming="CharacterEllipsis"
        TextWrapping="WrapWholeWords"
        />
    </DataTemplate>

    <ampc:ResourceFormatterConverter x:Key="ResourceConverter" />
    <x:String x:Key="ScoresResourceKey">TV^Scores^Final</x:String>

    <ControlTemplate x:Key="SportsLockupVariationTemplate">
      <Grid Name="SportsLockupVariationRoot">
        <StackPanel DataContext="{Binding children}">
          <StackPanel
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Orientation="Horizontal"
            >

            <!-- Optional upcoming time pill (future events) -->
            <Views:OptionalContentPresenter Name="OptionalTimeBadge"
              Margin="0 11 0 0"
              HorizontalAlignment="Left"
              VerticalAlignment="Top"
              Content="{Binding children.timeBadge}"
              DataContext="{Binding upNextSportsOverlay}"
              >
              <DataTemplate>
                <Grid Name="TimePill"
                  Padding="8 2 8 2"
                  Background="{StaticResource SportsTimeBadgeBackgroundColor}"
                  CornerRadius="10"
                  >
                  <TextBlock Name="Time"
                    Style="{StaticResource SportsTimeBadge}"
                    Text="{Binding children.text.value}"
                    />
                </Grid>
              </DataTemplate>
            </Views:OptionalContentPresenter>

            <!-- Optional live pill (live events) -->
            <Views:OptionalContentPresenter Name="OptionalLiveBadge"
              Margin="0 11 0 0"
              HorizontalAlignment="Left"
              VerticalAlignment="Top"
              Content="{Binding children.liveBadge}"
              DataContext="{Binding upNextSportsOverlay}"
              >
              <DataTemplate>
                <Grid Name="Pill"
                  Padding="8 2 8 2"
                  Background="{StaticResource SportsLiveBadgeBackgroundColor}"
                  CornerRadius="10"
                  >
                  <TextBlock Name="Status"
                    Style="{StaticResource SportsLiveBadge}"
                    Text="{Binding children.text.value}"
                    />
                </Grid>
              </DataTemplate>
            </Views:OptionalContentPresenter>

            <!-- Start time (if event happened in the past) -->
            <Views:OptionalContentPresenter Name="OptionalStartTime"
              Content="{Binding contentMetadata.gameStartTime}"
              DataContext="{Binding mediaShowcaseMetadata.supplementaryData}"
              >
              <DataTemplate>
                <StackPanel Orientation="Horizontal">
                  <TextBlock Name="Final"
                    Margin="3 11"
                    MaxLines="1"
                    Style="{StaticResource BodyEmphTextBlockStyle}"
                    Text="{Binding Source={StaticResource ScoresResourceKey}, Converter={StaticResource ResourceConverter}}"
                    TextTrimming="CharacterEllipsis"
                    />
                  <TextBlock Name="Separator"
                    Margin="3 11"
                    Style="{StaticResource BodyEmphTextBlockStyle}"
                    Text="{StaticResource DotSeparator}"
                    />
                  <TextBlock Name="StartTime"
                    Margin="3 11"
                    MaxLines="1"
                    Style="{StaticResource BodyEmphTextBlockStyle}"
                    Text="{Binding}"
                    TextTrimming="CharacterEllipsis"
                    />
                  <TextBlock Name="Separator"
                    Margin="3 11"
                    Style="{StaticResource BodyEmphTextBlockStyle}"
                    Text="{StaticResource DotSeparator}"
                    />
                </StackPanel>
              </DataTemplate>
            </Views:OptionalContentPresenter>

            <!-- League/venue (optional) -->
            <TextBlock Name="League"
              Margin="3 11"
              DataContext="{Binding mediaShowcaseMetadata.supplementaryData}"
              MaxLines="1"
              Style="{StaticResource BodyEmphTextBlockStyle}"
              Text="{Binding contentMetadata.channelName}"
              TextTrimming="CharacterEllipsis"
              />
            <Views:OptionalContentPresenter Name="Venue"
              Content="{Binding contentMetadata.gameVenue}"
              DataContext="{Binding mediaShowcaseMetadata.supplementaryData}"
              >
              <DataTemplate>
                <StackPanel Orientation="Horizontal">
                  <TextBlock Name="Separator"
                    Margin="3 11"
                    Style="{StaticResource BodyEmphTextBlockStyle}"
                    Text="{StaticResource DotSeparator}"
                    />
                  <TextBlock Name="GameVenue"
                    Margin="3 11"
                    MaxLines="1"
                    Style="{StaticResource BodyEmphTextBlockStyle}"
                    Text="{Binding}"
                    TextTrimming="CharacterEllipsis"
                    />
                </StackPanel>
              </DataTemplate>
            </Views:OptionalContentPresenter>
          </StackPanel>

          <!-- Scoreboard (team names/logos/scores [if present]) -->
          <Views:SportsScoreboardView Scoreboard="{Binding upNextSportsOverlay.children.scoreboard}" TeamTitles="{Binding mediaShowcaseMetadata.children.teamTitles}" />

          <!-- Description text (optional) -->
          <Views:OptionalContentPresenter Name="EventDescription"
            HorizontalAlignment="Left"
            Content="{Binding mediaShowcaseMetadata.children.subtitle}"
            OptionalTemplate="{StaticResource ContentDescriptionTemplate}"
            />

          <StackPanel HorizontalAlignment="Left" DataContext="{Binding mediaShowcaseMetadata}">
            <Views:OptionalContentPresenter Name="LockupButton"
              HorizontalAlignment="Center"
              Content="{Binding children.buttons}"
              OptionalTemplate="{StaticResource LockupButtonTemplate}"
              />

            <!-- Only present for unentitled users -->
            <Views:OptionalContentPresenter Name="DisclaimerText"
              Margin="0 7 0 0"
              HorizontalAlignment="Center"
              Content="{Binding children.disclaimerText}"
              OptionalTemplate="{StaticResource ButtonDisclaimerTextTemplate}"
              />
          </StackPanel>
        </StackPanel>
      </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="NonSportsLockupVariationTemplate">
      <StackPanel Name="NonSportsLockupVariationRoot" DataContext="{Binding children.mediaShowcaseMetadata}">
        <!-- Content logo or large title (fallback) -->
        <ContentControl Name="ContentLogoOrTitle"
          Content="{Binding children, Converter={StaticResource LogoOrTitlePriorityConverter}}"
          ContentTemplateSelector="{StaticResource LogoOrTitleTemplateSelector}"
          />

        <!-- Optional content metadata (empty for editorial lockup variation) -->
        <Views:OptionalContentPresenter Name="ContentMetadata"
          Content="{Binding supplementaryData.contentMetadata}"
          OptionalTemplate="{StaticResource ContentMetadataTemplate}"
          />

        <!-- Optional description text -->
        <Views:OptionalContentPresenter Name="ContentDescription"
          Content="{Binding children.subtitle}"
          OptionalTemplate="{StaticResource ContentDescriptionTemplate}"
          />

        <StackPanel HorizontalAlignment="Left">
          <Views:OptionalContentPresenter Name="LockupButton"
            HorizontalAlignment="Center"
            Content="{Binding children.buttons}"
            OptionalTemplate="{StaticResource LockupButtonTemplate}"
            />

          <!-- Only present for unentitled users -->
          <Views:OptionalContentPresenter Name="DisclaimerText"
            Margin="0 7 0 0"
            HorizontalAlignment="Center"
            Content="{Binding children.disclaimerText}"
            OptionalTemplate="{StaticResource ButtonDisclaimerTextTemplate}"
            />
        </StackPanel>
      </StackPanel>
    </ControlTemplate>

    <ampc:KeyValueConverter x:Key="LockupVariationSelector" DefaultValue="{StaticResource NonSportsLockupVariationTemplate}">
      <ampc:KeyValuePair Key="true" Value="{StaticResource SportsLockupVariationTemplate}" />
    </ampc:KeyValueConverter>

    <!--
      Used to determine if the left button should be shown or not
      (Only shown when backwards nav is possible; i.e. index > 0)
    -->
    <ampc:KeyValueConverter x:Key="SelectedIndexToVisibility" DefaultValue="Visible">
      <ampc:KeyValuePair Key="0" Value="Collapsed" />
    </ampc:KeyValueConverter>

  </Control.Resources>
  <Control.Template>
    <ControlTemplate>
      <!--
        Background images span entire grid
        _______________________________
        0                             |
        |     Lockup Item Content     |
        |                             |
        | Left Btn          Right Btn |
        |                             |
        | Lockup Info                 |
        1 _____________________________
        |        Pager Control        |
        _____________________________
      -->
      <Grid Name="ControlRoot"
        MaxWidth="{StaticResource MaxContentAreaWidth}"
        Margin="-10 0"
        Views:SizeChangedRelayer.Enabled="True"
        >
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <!-- This row holds pagination controls, should always be 44 pt tall (converted to px) -->
          <RowDefinition Height="59" />
        </Grid.RowDefinitions>
        <Grid.Resources>
          <!-- This is used to relay changes in the grid size to the ListView items -->
          <Views:AdaptiveLayout x:Key="GridStyle"
            CurrentWidth="{Binding (Views:SizeChangedRelayer.Width), ElementName=ControlRoot}"
            LayoutEnvironment="{StaticResource GridStyleEdgeToEdge}"
            />

          <!-- Needed since FlipView doesn't work correctly unless Width + Height are set explicitly on it. -->
          <Views:AspectRatioConverter x:Key="AspectRatioConverter" AspectRatio="{StaticResource AspectRatio_16_9}" />
        </Grid.Resources>

        <!-- FlipView spans the entire grid area -->
        <FlipView Name="lockupList"
          Grid.RowSpan="2"
          Width="{Binding ItemWidth, Source={StaticResource GridStyle}}"
          Height="{Binding ItemWidth, Source={StaticResource GridStyle}, Converter={StaticResource AspectRatioConverter}, ConverterParameter=Width}"
          Views:ItemsAutomationId.Enable="True"
          Views:SelectorIndexRetainer.Enable="True"
          Views:SelectorScroller.EnableAutoscroll="True"
          Views:SelectorScroller.PercentMustBeVisible="50"
          ItemTemplate="{StaticResource MediaShowcaseLockupTemplate}"
          ItemsSource="{Binding collectionGroups[0].children}"
          Style="{StaticResource FlipViewOverrideStyle}"
          />

        <!--
          Pagination control - bottom margin of 26 px = 20 pt margin
          Note: setting MaxVisiblePips to an even number seems to cause
          pips to get cut off.
        -->
        <PipsPager Name="PaginationControl"
          Grid.Row="1"
          Margin="0 0 0 26"
          HorizontalAlignment="Center"
          VerticalAlignment="Bottom"
          MaxVisiblePips="9"
          NextButtonVisibility="Collapsed"
          NormalPipStyle="{StaticResource NormalPipStyle}"
          NumberOfPages="{Binding collectionGroups[0].children, Converter={StaticResource ChildrenCount}}"
          PreviousButtonVisibility="Collapsed"
          SelectedPageIndex="{Binding ElementName=lockupList, Path=SelectedIndex, Mode=TwoWay}"
          SelectedPipStyle="{StaticResource SelectedPipStyle}"
          />

        <Grid
          Grid.Row="0"
          Grid.RowSpan="2"
          Margin="10"
          HorizontalAlignment="Left"
          VerticalAlignment="Center"
          >
          <Button Name="LeftButton"
            Views:ScrollButton.Direction="Left"
            Views:SelectorScroller.Selector="{Binding ElementName=lockupList}"
            Opacity="1"
            Style="{StaticResource LeftButtonStyle}"
            Visibility="{Binding ElementName=lockupList, Path=SelectedIndex, Converter={StaticResource SelectedIndexToVisibility}}"
            >
            <!--
              Setting content here explicitly, since it seems
              the style breaks when navigating back after navigating away
            -->
            <FontIcon
              Margin="-8 2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Glyph="{StaticResource SegoeChevronLeftGlyph}"
              MirroredWhenRightToLeft="True"
              Style="{ThemeResource SegoeChromeSymbolFontIconStyle}"
              UseLayoutRounding="False"
              />
          </Button>
        </Grid>

        <Grid
          Grid.Row="0"
          Grid.RowSpan="2"
          Margin="10"
          HorizontalAlignment="Right"
          VerticalAlignment="Center"
          >
          <Button Name="RightButton"
            Views:ScrollButton.Direction="Right"
            Views:SelectorScroller.Selector="{Binding ElementName=lockupList}"
            Opacity="1"
            Style="{StaticResource RightButtonStyle}"
            >
            <!--
              Setting content here explicitly, since it seems
              the style breaks when navigating back after navigating away
            -->
            <FontIcon
              Margin="-8 2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Glyph="{StaticResource SegoeChevronRightGlyph}"
              MirroredWhenRightToLeft="True"
              Style="{ThemeResource SegoeChromeSymbolFontIconStyle}"
              UseLayoutRounding="False"
              />
          </Button>
        </Grid>

      </Grid>
    </ControlTemplate>
  </Control.Template>
</Control>
