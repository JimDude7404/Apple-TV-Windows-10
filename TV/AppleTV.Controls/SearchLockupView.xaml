<!--
  Copyright Â© 2022 Apple Inc. All rights reserved.
-->
<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:Views="using:AppleTV.Controls"
  xmlns:ampc="using:AMP.UI.Controls"
  >

  <!-- non top-results lockups -->
  <ControlTemplate x:Key="SearchLockupView_lockup">
    <ampc:AspectRatioGrid
      Views:CommandEvents.TappedCommand="{Binding routerDataSource.selectEventDataSource}"
      AspectRatio="{StaticResource AspectRatio_16_9}"
      BorderBrush="{StaticResource LockupBorderBrush}"
      BorderThickness="1"
      CornerRadius="{StaticResource GridItemCornerRadius}"
      >
      <ampc:AspectRatioGrid.Resources>
        <Views:JsonImageToImageSourceConverter x:Key="ImgSource" Height="172" />
      </ampc:AspectRatioGrid.Resources>

      <ampc:AspectRatioGrid.Background>
        <SolidColorBrush Color="{Binding children.img.layout.placeholderColor}" />
      </ampc:AspectRatioGrid.Background>

      <Image Source="{Binding children.img, Converter={StaticResource ImgSource}}" Stretch="UniformToFill" />

    </ampc:AspectRatioGrid>
  </ControlTemplate>

  <!-- top-results lockup -->
  <ControlTemplate x:Key="SearchLockupView_topResult">
    <Grid Name="SearchLockup"
      Height="150"
      Padding="14"
      Views:CommandEvents.TappedCommand="{Binding routerDataSource.selectEventDataSource}"
      Views:SizeChangedRelayer.Enabled="True"
      Background="{ThemeResource ListViewItemBackgroundPointerOver}"
      CornerRadius="8"
      >

      <Grid.Resources>
        <!-- snap points based on top results lockup widths when the other collection rows change counts -->
        <x:Double x:Key="Large">398.5</x:Double>
        <x:Double x:Key="Medium">292.5</x:Double>

        <Views:GreaterThanToBoolConverter x:Key="GreaterThan" />

        <Views:JsonImageToImageSourceConverter x:Key="ImgSource" Height="122" />

      </Grid.Resources>

      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="Sizes">

          <!-- 1320 to 1680 -->
          <VisualState x:Name="Large">
            <VisualState.StateTriggers>
              <StateTrigger IsActive="{Binding (Views:SizeChangedRelayer.Width), ElementName=SearchLockup, Converter={StaticResource GreaterThan}, ConverterParameter={StaticResource Large}}" />
            </VisualState.StateTriggers>
            <!-- use values coded in xaml -->
          </VisualState>

          <!-- 1000 to 1319 -->
          <VisualState x:Name="Medium">
            <VisualState.StateTriggers>
              <StateTrigger IsActive="{Binding (Views:SizeChangedRelayer.Width), ElementName=SearchLockup, Converter={StaticResource GreaterThan}, ConverterParameter={StaticResource Medium}}" />
            </VisualState.StateTriggers>
            <VisualState.Setters>
              <Setter Target="SearchLockup.Height" Value="110" />
              <Setter Target="SearchLockup.Padding" Value="14" />
            </VisualState.Setters>
          </VisualState>

          <!-- 0 to 999 -->
          <VisualState x:Name="Small">
            <VisualState.StateTriggers>
              <!-- first state that is "True" will win, so this is like a "default" case -->
              <StateTrigger IsActive="True" />
            </VisualState.StateTriggers>
            <VisualState.Setters>
              <Setter Target="SearchLockup.Height" Value="80" />
              <Setter Target="SearchLockup.Padding" Value="12" />
              <Setter Target="TitleTexts.Margin" Value="12 0 0 0" />
            </VisualState.Setters>
          </VisualState>

        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>

      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>

      <Views:OptionalContentPresenter Content="{Binding children.img}">
        <DataTemplate>
          <ampc:AspectRatioGrid Name="img"
            AspectRatio="{StaticResource AspectRatio_16_9}"
            CornerRadius="4"
            >
            <ampc:AspectRatioGrid.Background>
              <SolidColorBrush Color="{Binding layout.backgroundColor}" />
            </ampc:AspectRatioGrid.Background>

            <Image Source="{Binding Converter={StaticResource ImgSource}}" Stretch="UniformToFill" />

          </ampc:AspectRatioGrid>
        </DataTemplate>
      </Views:OptionalContentPresenter>

      <Views:OptionalContentPresenter Content="{Binding children.monogram}">
        <DataTemplate>
          <ampc:AspectRatioGrid Name="monogram"
            Background="{ThemeResource SecondaryTextForegroundColor}"
            IsRound="True"
            >

            <ampc:AspectRatioGrid.Resources>
              <Views:AttributesToInitialsConverter x:Key="AttributesToInitials" />
            </ampc:AspectRatioGrid.Resources>

            <TextBlock
              VerticalAlignment="Center"
              FontWeight="Light"
              HorizontalTextAlignment="Center"
              MaxLines="1"
              RequestedTheme="Dark"
              Style="{StaticResource LargeTitleTextBlockStyle}"
              Text="{Binding attributes, Converter={StaticResource AttributesToInitials}}"
              />

            <Image Source="{Binding children.img, Converter={StaticResource ImgSource}}" Stretch="UniformToFill" />

          </ampc:AspectRatioGrid>
        </DataTemplate>
      </Views:OptionalContentPresenter>

      <!-- texts on the right of the image -->
      <Views:CollectionStackPanel Name="TitleTexts"
        Grid.Column="1"
        Margin="14 0 0 0"
        VerticalAlignment="Center"
        ItemsSource="{Binding children}"
        >
        <Views:ItemTypeTemplateSelector>

          <Views:ItemTypeTemplate ItemType="title">
            <DataTemplate>
              <TextBlock Name="title"
                MaxLines="2"
                Opacity="{ThemeResource PrimaryTextOpacity}"
                Style="{StaticResource Title3TextBlockStyle}"
                Text="{Binding value}"
                TextTrimming="CharacterEllipsis"
                />
            </DataTemplate>
          </Views:ItemTypeTemplate>

          <Views:ItemTypeTemplate ItemType="subtitle">
            <DataTemplate>
              <TextBlock Name="subtitle"
                Opacity="{ThemeResource SecondaryTextOpacity}"
                Style="{StaticResource CalloutTextBlockStyle}"
                Text="{Binding value}"
                TextTrimming="CharacterEllipsis"
                />
            </DataTemplate>
          </Views:ItemTypeTemplate>

        </Views:ItemTypeTemplateSelector>
      </Views:CollectionStackPanel>

    </Grid>
  </ControlTemplate>

  <!-- sports card - copied from SportsCardView.xaml - this is a one-off case. it's generally frowned uppon to duplicate xaml like this -->
  <ControlTemplate x:Key="SearchLockupView_sportsCardLockup">
    <StackPanel Name="sportsCard" Views:CommandEvents.TappedCommand="{Binding routerDataSource.selectEventDataSource}">

      <ampc:AspectRatioGrid
        AspectRatio="{StaticResource AspectRatio_16_9}"
        BorderBrush="{StaticResource LockupBorderBrush}"
        BorderThickness="1"
        CornerRadius="{StaticResource GridItemCornerRadius}"
        DataContext="{Binding children}"
        >
        <ampc:AspectRatioGrid.Resources>
          <Views:JsonImageToImageSourceConverter x:Key="ImgSource" Height="172" />
        </ampc:AspectRatioGrid.Resources>

        <ampc:AspectRatioGrid.Background>
          <SolidColorBrush Color="{Binding img.layout.placeholderColor}" />
        </ampc:AspectRatioGrid.Background>

        <Image Source="{Binding img, Converter={StaticResource ImgSource}}" Stretch="UniformToFill" />

        <Views:UnifiedOverlayView Name="SportsOverlay" DataContext="{Binding sportsOverlay}" />

      </ampc:AspectRatioGrid>

      <TextBlock Style="{StaticResource Title3TextBlockStyle}" Text="{Binding children.title.value}" />
      <TextBlock Style="{StaticResource Caption2TextBlockStyle}" Text="{Binding children.subtitle.value}" />

    </StackPanel>
  </ControlTemplate>

</ResourceDictionary>
