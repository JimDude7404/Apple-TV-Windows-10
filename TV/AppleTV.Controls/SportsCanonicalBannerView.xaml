<!--
  Copyright Â© 2022 Apple Inc. All rights reserved.
-->
<Control
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:Views="using:AppleTV.Controls"
  xmlns:ampc="using:AMP.UI.Controls"
  >

  <Control.Resources>
    <Views:FirstOfTypeConverter x:Key="SelectBackgroundChild" ItemType="backgroundImage" />
    <Views:StaticResourceValue x:Key="BackgroundContext" Value="{Binding children, Converter={StaticResource SelectBackgroundChild}}" />
    <Views:FirstOfTypeConverter x:Key="SelectTitleChild" ItemType="title" />
    <Views:FirstOfTypeConverter x:Key="SelectScoreboardChild" ItemType="scoreboard" />
    <Views:FirstOfTypeConverter x:Key="SelectBodyTextChild" ItemType="bodyText" />
    <Views:FirstOfTypeConverter x:Key="SelectButtonsChild" ItemType="buttons" />

    <Views:FirstOfTypeConverter x:Key="SelectScoreRowChild" ItemType="scoreRow" />
    <Views:FirstOfTypeConverter x:Key="SelectScoreTextChild" ItemType="scoreText" />
    <Views:AutomationIdConverter x:Key="AutomationIdConverter" />

    <!-- This size is the magic sauce to make the crop code work. Pulled from MacOS. Larger than it should be and doesn't respect aspect ratio. -->
    <Views:JsonImageSource x:Key="ImgSource"
      Img="{Binding Value, Source={StaticResource BackgroundContext}}"
      RequestSize="{StaticResource BannerDefaultSize}"
      ResourceLookup="{StaticResource ImgSrcResourceLookup}"
      />
    <Views:JsonImageBrush x:Key="ImgBrush" JsonImageSource="{StaticResource ImgSource}" />

    <!--
      capture the background image theme here so that it can be passed to verticalStack children as a
      StaticResource since the children don't have access to json tree data members outside of their local scope
    -->
    <Views:StaticResourceValue x:Key="TextForegroundValue" Value="{Binding Value.theme, Source={StaticResource BackgroundContext}, Converter={StaticResource TextForegroundSelector}}" />

    <Views:ThemeStringToThemeConverter x:Key="ThemeStringToTheme" />
    <Views:StaticResourceValue x:Key="Theme" Value="{Binding Value.theme, Source={StaticResource BackgroundContext}, Converter={StaticResource ThemeStringToTheme}}" />
    <Views:StaticResourceValue x:Key="InverseTheme" Value="{Binding Value.theme, Source={StaticResource BackgroundContext}, Converter={StaticResource ThemeStringToTheme}, ConverterParameter=Invert}" />

    <DataTemplate x:Key="IconButtonTemplate">
      <Views:IconButton />
    </DataTemplate>
  </Control.Resources>

  <Control.Template>
    <ControlTemplate>

      <!-- Explicitly don't want to respect the image aspect ratio here and use 16:9 instead -->
      <ampc:AspectRatioGrid
        MaxWidth="{StaticResource MaxContentAreaWidth}"
        Views:JsonImage.LoadingCurtain="{StaticResource ImgBrush}"
        AspectRatio="{StaticResource AspectRatio_16_9}"
        Background="{Binding Brush, Source={StaticResource ImgBrush}}"
        BorderBrush="{StaticResource LockupBorderBrush}"
        BorderThickness="1"
        RequestedTheme="{Binding Value, Source={StaticResource Theme}}"
        >
        <Grid Margin="40" HorizontalAlignment="Left">
          <StackPanel VerticalAlignment="Top">
            <TextBlock
              DataContext="{Binding children, Converter={StaticResource SelectTitleChild}}"
              Style="{StaticResource SubheadlineTextBlockStyle}"
              Text="{Binding value}"
              />
            <StackPanel DataContext="{Binding children, Converter={StaticResource SelectScoreboardChild}}">
              <Grid DataContext="{Binding children, Converter={StaticResource SelectScoreRowChild}}">
                <TextBlock
                  Margin="0 20"
                  DataContext="{Binding children, Converter={StaticResource SelectScoreTextChild}}"
                  Style="{StaticResource LargeTitleEmphTextBlockStyle}"
                  Text="{Binding value}"
                  />
              </Grid>
              <TextBlock
                DataContext="{Binding children, Converter={StaticResource SelectBodyTextChild}}"
                Style="{StaticResource BodyTextBlockStyle}"
                Text="{Binding value}"
                />
            </StackPanel>
            <TextBlock
              DataContext="{Binding children, Converter={StaticResource SelectBodyTextChild}}"
              Style="{StaticResource BodyTextBlockStyle}"
              Text="{Binding value}"
              />
          </StackPanel>
          <Views:CollectionStackPanel
            Name="Buttons"
            VerticalAlignment="Bottom"
            DataContext="{Binding children, Converter={StaticResource SelectButtonsChild}}"
            ItemsSource="{Binding children}"
            RequestedTheme="{Binding Value, Source={StaticResource InverseTheme}}"
            >
            <Views:CollectionStackPanel.ItemTemplate>
              <DataTemplate>
                <Button
                  MinWidth="300"
                  MaxWidth="500"
                  Margin="0 4 0 0"
                  HorizontalAlignment="Stretch"
                  AutomationProperties.AutomationId="{Binding id, Converter={StaticResource AutomationIdConverter}}"
                  Background="{Binding Value, Source={StaticResource TextForegroundValue}}"
                  Command="{Binding routerDataSource.selectEventDataSource}"
                  Content="{Binding}"
                  ContentTemplate="{StaticResource IconButtonTemplate}"
                  CornerRadius="6"
                  />
              </DataTemplate>
            </Views:CollectionStackPanel.ItemTemplate>
          </Views:CollectionStackPanel>
        </Grid>
      </ampc:AspectRatioGrid>

    </ControlTemplate>
  </Control.Template>

</Control>
